package com.shq.entities;
// Generated 10-feb-2018 21:58:23 by Hibernate Tools 5.2.3.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * MovInventario generated by hbm2java
 */
@Entity
@Table(name = "mov_inventario", catalog = "shq", uniqueConstraints = @UniqueConstraint(columnNames = "id_externo"))
public class MovInventario implements java.io.Serializable {

	private Integer id;
	private Externo externo;
	private int cantidad;
	private BigDecimal costoMxn;
	private BigDecimal costoUsd;
	private BigDecimal dimensiones;
	private Date fechaCaducidad;
	private Date fechaIngreso;
	private Date fechaSalida;
	private BigDecimal hs;
	private Unidad unidad;
	private String incoterms;
	private String lote;
	private String motivo;
	private BigDecimal prtjIgi;
	private BigDecimal prtjIva;
	private String status;
	private BigDecimal tc;
	private BigDecimal unidXPresent;
	private Almacen almacen;
	private Empaque empaque;
	private MotivoMov motivoMov;
	private Pedimento pedimento;
	private Producto producto;

	public MovInventario() {
	}

	public MovInventario(int id, int cantidad) {
		this.id = id;
		this.cantidad = cantidad;
	}

	public MovInventario(int id, Externo externo, int cantidad, BigDecimal costoMxn, BigDecimal costoUsd,
			BigDecimal dimensiones, Date fechaCaducidad, Date fechaIngreso, Date fechaSalida, BigDecimal hs,
			Unidad unidad, String incoterms, String lote, String motivo, BigDecimal prtjIgi, BigDecimal prtjIva,
			String status, BigDecimal tc, BigDecimal unidXPresent, Almacen almacen,Empaque empaque,
			MotivoMov motivoMov, Pedimento pedimento, Producto producto) {
		this.id = id;
		this.externo = externo;
		this.cantidad = cantidad;
		this.costoMxn = costoMxn;
		this.costoUsd = costoUsd;
		this.dimensiones = dimensiones;
		this.fechaCaducidad = fechaCaducidad;
		this.fechaIngreso = fechaIngreso;
		this.fechaSalida = fechaSalida;
		this.hs = hs;
		this.unidad = unidad;
		this.incoterms = incoterms;
		this.lote = lote;
		this.motivo = motivo;
		this.prtjIgi = prtjIgi;
		this.prtjIva = prtjIva;
		this.status = status;
		this.tc = tc;
		this.unidXPresent = unidXPresent;
		this.almacen = almacen;
		this.empaque = empaque;
		this.motivoMov = motivoMov;
		this.pedimento = pedimento;
		this.producto = producto;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO) 
	@Column(name = "id", unique = true, nullable = false, precision = 11, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_externo")
	public Externo getExterno() {
		return this.externo;
	}

	public void setExterno(Externo externo) {
		this.externo = externo;
	}

	@Column(name = "cantidad", nullable = false)
	public int getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(int cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "costo_mxn")
	public BigDecimal getCostoMxn() {
		return this.costoMxn;
	}

	public void setCostoMxn(BigDecimal costoMxn) {
		this.costoMxn = costoMxn;
	}

	@Column(name = "costo_usd")
	public BigDecimal getCostoUsd() {
		return this.costoUsd;
	}

	public void setCostoUsd(BigDecimal costoUsd) {
		this.costoUsd = costoUsd;
	}

	@Column(name = "dimensiones")
	public BigDecimal getDimensiones() {
		return this.dimensiones;
	}

	public void setDimensiones(BigDecimal dimensiones) {
		this.dimensiones = dimensiones;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_caducidad", length = 19)
	public Date getFechaCaducidad() {
		return this.fechaCaducidad;
	}

	public void setFechaCaducidad(Date fechaCaducidad) {
		this.fechaCaducidad = fechaCaducidad;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_ingreso", length = 19)
	public Date getFechaIngreso() {
		return this.fechaIngreso;
	}

	public void setFechaIngreso(Date fechaIngreso) {
		this.fechaIngreso = fechaIngreso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_salida", length = 19)
	public Date getFechaSalida() {
		return this.fechaSalida;
	}

	public void setFechaSalida(Date fechaSalida) {
		this.fechaSalida = fechaSalida;
	}

	@Column(name = "hs")
	public BigDecimal getHs() {
		return this.hs;
	}

	public void setHs(BigDecimal hs) {
		this.hs = hs;
	}

	@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_unidad")
	public Unidad getUnidad() {
		return this.unidad;
	}

	public void setUnidad(Unidad unidad) {
		this.unidad = unidad;
	}

	@Column(name = "incoterms")
	public String getIncoterms() {
		return this.incoterms;
	}

	public void setIncoterms(String incoterms) {
		this.incoterms = incoterms;
	}

	@Column(name = "lote")
	public String getLote() {
		return this.lote;
	}

	public void setLote(String lote) {
		this.lote = lote;
	}

	@Column(name = "motivo")
	public String getMotivo() {
		return this.motivo;
	}

	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}

	@Column(name = "prtj_igi")
	public BigDecimal getPrtjIgi() {
		return this.prtjIgi;
	}

	public void setPrtjIgi(BigDecimal prtjIgi) {
		this.prtjIgi = prtjIgi;
	}

	@Column(name = "prtj_iva")
	public BigDecimal getPrtjIva() {
		return this.prtjIva;
	}

	public void setPrtjIva(BigDecimal prtjIva) {
		this.prtjIva = prtjIva;
	}

	@Column(name = "status")
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "tc")
	public BigDecimal getTc() {
		return this.tc;
	}

	public void setTc(BigDecimal tc) {
		this.tc = tc;
	}

	@Column(name = "unid_x_present")
	public BigDecimal getUnidXPresent() {
		return this.unidXPresent;
	}

	public void setUnidXPresent(BigDecimal unidXPresent) {
		this.unidXPresent = unidXPresent;
	}

	@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_almacen")
	public Almacen getAlmacen() {
		return this.almacen;
	}

	public void setAlmacen(Almacen almacen) {
		this.almacen = almacen;
	}

	@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_empaque")
	public Empaque getEmpaque() {
		return this.empaque;
	}

	public void setEmpaque(Empaque empaque) {
		this.empaque = empaque;
	}

	@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_motivo_mov")
	public MotivoMov getMotivoMov() {
		return this.motivoMov;
	}

	public void setMotivoMov(MotivoMov motivoMov) {
		this.motivoMov = motivoMov;
	}

	@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_pedimento")
	public Pedimento getPedimento() {
		return this.pedimento;
	}

	public void setPedimento(Pedimento pedimento) {
		this.pedimento = pedimento;
	}

	@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="id_producto")
	public Producto getProducto() {
		return this.producto;
	}

	public void setProducto(Producto producto) {
		this.producto = producto;
	}

}
